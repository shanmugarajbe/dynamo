{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is a Slicko App REST API documentation.",
    "version" : "1.0.0",
    "title" : "Slicko Product",
    "termsOfService" : "http://slicko.io/",
    "contact" : {
      "email" : "shanmugarajbe.ece@slicko.io"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "slicko-product.herokuapp.com",
  "basePath" : "/",
  "tags" : [ {
    "name" : "skuboard",
    "description" : "All catalog APIs",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://skuops.com"
    }
  }, {
    "name" : "Users",
    "description" : "Operations about users",
    "externalDocs" : {
      "description" : "Find out more about our App",
      "url" : "http://skuops.com"
    }
  } ],
  "schemes" : [ "https", "http" ],
  "paths" : {
    "/products" : {
      "get" : {
        "tags" : [ "skuboard" ],
        "summary" : "Finds all products ",
        "description" : "Multiple status values can be provided with comma separated strings",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Products"
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          }
        },
        "security" : [ {
          "content_type" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "skuboard" ],
        "summary" : "Add a new pet to the store",
        "description" : "",
        "operationId" : "addPet",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Pet object that needs to be added to the store",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Pet"
          }
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:pets", "read:pets" ]
        } ]
      },
      "put" : {
        "tags" : [ "skuboard" ],
        "summary" : "Update an existing pet",
        "description" : "",
        "operationId" : "updatePet",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Pet object that needs to be added to the store",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Pet"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Pet not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:pets", "read:pets" ]
        } ]
      }
    },
    "/products/{id}" : {
      "get" : {
        "tags" : [ "skuboard" ],
        "summary" : "Find product by ID",
        "description" : "Returns a single product",
        "operationId" : "getProductById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of product to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Products"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Pet not found"
          }
        }
      },
      "post" : {
        "tags" : [ "products" ],
        "summary" : "Updates a pet in the store with form data",
        "description" : "",
        "operationId" : "updatePetWithForm",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/xml", "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of pet that needs to be updated",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "Updated name of the pet",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "formData",
          "description" : "Updated status of the pet",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:pets", "read:pets" ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "petstore_auth" : {
      "type" : "oauth2",
      "authorizationUrl" : "http://petstore.swagger.io/oauth/dialog",
      "flow" : "implicit",
      "scopes" : {
        "write:pets" : "modify pets in your account",
        "read:pets" : "read your pets"
      }
    },
    "content_type" : {
      "type" : "apiKey",
      "name" : "Content-Type",
      "in" : "header"
    }
  },
  "definitions" : {
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "username" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "userStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "User Status"
        }
      },
      "xml" : {
        "name" : "User"
      }
    },
    "Category" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      },
      "example" : {
        "name" : "name",
        "id" : 6
      },
      "xml" : {
        "name" : "Category"
      }
    },
    "Tag" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      },
      "example" : {
        "name" : "name",
        "id" : 6
      },
      "xml" : {
        "name" : "Tag"
      }
    },
    "Products" : {
      "type" : "object",
      "required" : [ "price", "title", "type", "usage" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "category" : {
          "$ref" : "#/definitions/Category"
        },
        "title" : {
          "type" : "string",
          "example" : "Test Product"
        },
        "type" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 2
        },
        "usage" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 4
        },
        "description" : {
          "type" : "string",
          "example" : "<div> This is example </div>"
        },
        "price" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 2
        },
        "salePrice" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 45
        },
        "cost" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 45
        },
        "assets" : {
          "type" : "object",
          "properties" : { }
        },
        "attrs" : {
          "type" : "array",
          "description" : "Add a array of attrs which needs to be added",
          "items" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "example" : {
        "cost" : 45,
        "assets" : "{}",
        "salePrice" : 45,
        "price" : 2,
        "usage" : 4,
        "description" : "<div> This is example </div>",
        "id" : 0,
        "category" : {
          "name" : "name",
          "id" : 6
        },
        "title" : "Test Product",
        "type" : 2,
        "attrs" : [ "{}", "{}" ]
      }
    },
    "Pet" : {
      "type" : "object",
      "required" : [ "name", "photoUrls" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "category" : {
          "$ref" : "#/definitions/Category"
        },
        "name" : {
          "type" : "string",
          "example" : "doggie"
        },
        "photoUrls" : {
          "type" : "array",
          "xml" : {
            "name" : "photoUrl",
            "wrapped" : true
          },
          "items" : {
            "type" : "string"
          }
        },
        "tags" : {
          "type" : "array",
          "xml" : {
            "name" : "tag",
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "status" : {
          "type" : "string",
          "description" : "pet status in the store",
          "enum" : [ "available", "pending", "sold" ]
        }
      },
      "example" : {
        "photoUrls" : [ "photoUrls", "photoUrls" ],
        "name" : "doggie",
        "id" : 0,
        "category" : {
          "name" : "name",
          "id" : 6
        },
        "tags" : [ {
          "name" : "name",
          "id" : 6
        }, {
          "name" : "name",
          "id" : 6
        } ],
        "status" : "available"
      },
      "xml" : {
        "name" : "Pet"
      }
    },
    "ApiResponse" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Slicko",
    "url" : "http://skuops.com"
  }
}
